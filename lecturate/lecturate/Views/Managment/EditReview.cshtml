@model lecturate.Models.Review

@{
    ViewBag.Title = "EditReview";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="pagePlaceWithoutLayout">
    <div class="container">
    <div class="form-horizontal">
        <h4>עריכת דירוג</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ReviewID)



        <div class="form-group">
            <label class="control-label col-md-2" for="InstitutionID">מוסד לימוד</label>
            <div class="col-md-10">
                @Html.DropDownList("InstitutionID", String.Empty)
                @Html.ValidationMessageFor(model => model.InstitutionID)
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2" for="SchoolID">בית ספר</label>
            <div class="col-md-10">
                @Html.DropDownList("SchoolID", String.Empty)
                @Html.ValidationMessageFor(model => model.SchoolID)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CourseID">קורס</label>
            <div class="col-md-10">
                @Html.DropDownList("CourseID", String.Empty)
                @Html.ValidationMessageFor(model => model.CourseID)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LecturerID">מרצה</label>
            <div class="col-md-10">
                @Html.DropDownList("LecturerID", String.Empty)
                @Html.ValidationMessageFor(model => model.LecturerID)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UpVote, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpVote)
                @Html.ValidationMessageFor(model => model.UpVote)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DownVote, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DownVote)
                @Html.ValidationMessageFor(model => model.DownVote)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LecturerReadine, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LecturerReadine)
                @Html.ValidationMessageFor(model => model.LecturerReadine)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LecturerTransferRate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LecturerTransferRate)
                @Html.ValidationMessageFor(model => model.LecturerTransferRate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LecturerAttitude, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LecturerAttitude)
                @Html.ValidationMessageFor(model => model.LecturerAttitude)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LecturerKnowledge, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LecturerKnowledge)
                @Html.ValidationMessageFor(model => model.LecturerKnowledge)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudyingYear, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudyingYear)
                @Html.ValidationMessageFor(model => model.StudyingYear)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PositiveComment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PositiveComment)
                @Html.ValidationMessageFor(model => model.PositiveComment)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NegativeComment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NegativeComment)
                @Html.ValidationMessageFor(model => model.NegativeComment)
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="שמירה" class="btn btn-default" />
            </div>
        </div>
    </div>
    </div>
    </div>
}

<div class="container backToList">
    @Html.ActionLink("חזרה לרשימה המלאה", "AllReviews")
</div>


